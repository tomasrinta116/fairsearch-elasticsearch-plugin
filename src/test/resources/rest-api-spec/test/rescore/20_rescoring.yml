---
setup:
  - do:
      indices.create:
        index:  test
        body:
          settings:
            number_of_shards: 1
            number_of_replicas: 1
          mappings:
            test:
              properties:
                gender:
                  type: text
                  store: true

  - do:
      index:
        index:  test
        type:   test
        id:     1
        body:   { "body": "hello hello hello hello hello hello hello hello hello hello", "gender": "m"}
  - do:
      index:
        index:  test
        type:   test
        id:     2
        body:   { "body": "hello hello hello hello hello hello hello hello hello bye", "gender": "m"}
  - do:
      index:
        index:  test
        type:   test
        id:     3
        body:   { "body": "hello hello hello hello hello hello hello hello bye bye", "gender": "m"}
  - do:
      index:
        index:  test
        type:   test
        id:     4
        body:   { "body": "hello hello hello hello hello hello hello bye bye bye", "gender": "m"}
  - do:
      index:
        index:  test
        type:   test
        id:     5
        body:   { "body": "hello hello hello hello hello hello bye bye bye bye", "gender": "m"}
  - do:
      index:
        index:  test
        type:   test
        id:     6
        body:   { "body": "hello hello hello hello hello bye bye bye bye bye", "gender": "f"}
  - do:
      index:
        index:  test
        type:   test
        id:     7
        body:   { "body": "hello hello hello hello bye bye bye bye bye bye", "gender": "f"}
  - do:
      index:
        index:  test
        type:   test
        id:     8
        body:   { "body": "hello hello hello bye bye bye bye bye bye bye", "gender": "f"}
  - do:
      index:
        index:  test
        type:   test
        id:     9
        body:   { "body": "hello hello bye bye bye bye bye bye bye bye", "gender": "f"}
  - do:
      index:
        index:  test
        type:   test
        id:     10
        body:   { "body": "hello bye bye bye bye bye bye bye bye bye", "gender": "f"}

  - do:
      fs.create_table:
        proportion: 0.8
        alpha: 0.1
        k: 10
  - do:
      indices.refresh: {}

---
"hello search without a fair rescore":
  - do:
      search:
        index: test
        body:
          query:
            match:
              body: "hello"

  - length: { hits.hits: 10 }
  - match:  { hits.hits.0._source: { "body": "hello hello hello hello hello hello hello hello hello hello", "gender": "m" } }
  - match:  { hits.hits.1._source: { "body": "hello hello hello hello hello hello hello hello hello bye", "gender": "m"} }
  - match:  { hits.hits.2._source: { "body": "hello hello hello hello hello hello hello hello bye bye", "gender": "m"} }
  - match:  { hits.hits.3._source: { "body": "hello hello hello hello hello hello hello bye bye bye", "gender": "m"} }
  - match:  { hits.hits.4._source: { "body": "hello hello hello hello hello hello bye bye bye bye", "gender": "m"} }
  - match:  { hits.hits.5._source: { "body": "hello hello hello hello hello bye bye bye bye bye", "gender": "f"} }
  - match:  { hits.hits.6._source: { "body": "hello hello hello hello bye bye bye bye bye bye", "gender": "f"} }
  - match:  { hits.hits.7._source: { "body": "hello hello hello bye bye bye bye bye bye bye", "gender": "f"} }
  - match:  { hits.hits.8._source: { "body": "hello hello bye bye bye bye bye bye bye bye", "gender": "f"} }
  - match:  { hits.hits.9._source: { "body": "hello bye bye bye bye bye bye bye bye bye", "gender": "f"} }

---
"hello search with a fair rescore":
  - do:
      search:
        index: test
        body:
          query:
            match:
             body: "hello"
          rescore:
            fair_rescorer:
              protected_key: gender
              protected_value: f
              significance_level: 0.1
              min_proportion_protected: 0.8

  - length: { hits.hits: 10 }
  - match:  { hits.hits.0._source: { "body": "hello hello hello hello hello hello hello hello hello hello", "gender": "m" } }
  - match:  { hits.hits.1._source: { "body": "hello hello hello hello hello hello hello hello hello bye", "gender": "m"} }
  - match:  { hits.hits.2._source: { "body": "hello hello hello hello hello bye bye bye bye bye", "gender": "f"} }
  - match:  { hits.hits.3._source: { "body": "hello hello hello hello hello hello hello hello bye bye", "gender": "m"} }
  - match:  { hits.hits.4._source: { "body": "hello hello hello hello bye bye bye bye bye bye", "gender": "f"} }
---
# this test should pass now - FairnessCache create the mtable if it does not exist
"abort for wrong k setup during rescoring":
  - do:
#      catch: request
      search:
        index: test
        body:
          query:
            match:
             body: "hello"
          rescore:
            fair_rescorer:
              protected_key: gender
              protected_value: f
              significance_level: 0.1
              proportion_strategy: fixed
              lookup_for_measuring_proportion: 100
---
# this test should pass now - FairnessCache create the mtable if it does not exist
"abort rescoring":
  - do:
#     catch: request
     search:
        index: test
        body:
          rescore:
            fair_rescorer:
              protected_key: gender
              protected_value: Female
              min_proportion_protected: 0.99
              on_few_protected_elements: "abort"
